[ServiceTest] : 스타티드 서비스 위주로 볼 것
[Foreground] : 포어그라운드 알림 세팅 예제

서비스 : 백그라운드 스레드에서 동작하는 컴포넌트로 알려져있지만 서비스만으로는 백그라운드 스레드에서 동작하지 않고 동작 과정에서 메인 스레드도 사용함
[New]-[Service]-[Service] 서비스 생성

서비스 실행 방식으로 분류 : 스타티드 서비스(일반적으로 많이 사용)/바운드 서비스
실행 구조로 분류 : 포어그라운드 서비스/백그라운드 서비스(기본적으로 서비스는 백그라운드 서비스)

스타티드 서비스 :
-액티비티와 상관없이 독립적으로 동작하며 액티비티 종료와 무관하게 동작
-startService() 메서드로 호출
-stopService() 메서드로 서비스 종료
바운드 서비스
-액티비티와 값을 주고 받을 때 사용하며 값을 주고 받기 위한 인터페이스 제공
-연결된 액티비티가 종료되면 서비스도 종료되고 특별한 경우를 제외하고는 잘 사용안됨
-여러개의 액티비티가 같은 서비스를 사용할 수 있어 기존에 있는 서비스를 바인딩해 재사용 가능
-bindService() 메서드로 호출

포어그라운드 서비스 :
-알림을 통해 현재 작업이 진행중이라는 것을 알려줘야함
-오레오 버전 부터는 모든 알림은 채널 단위로 동작함
-가용 자원이 부족 이유로 종료되지 않음
-ContextCompat.startForegroundService()//액티비티 -> onStartCommand()//서비스 -> startForeground()//서비스
백그라운드 서비스 :
-안드로이드 가용 자원이 부족하면 시스템에 의해 제거될 수 있음
____________________________________________________________________________________________________
[ContentResolver] : MediaStore 에서 실제 음원 목록을 가져와 화면에 출력하는 예제

AndroidManifest 에 외부 저장소 읽기 퍼미션 추가

콘텐트 프로바이더
-내가 만든 앱의 데이터를 다른 앱에서도 사용할 수 있게 제공할 때 필요한 도구
-안드로이드 OS에 이미 구현되어 있어(연락처, 갤러리, 음악 등) 앱 개발을 하면서 사용할 일은 거의 없음

콘텐트 리졸버
-다른 앱의 콘텐트 프로바이더로부터 데이터를 가져오는 도구
-미디어 정보를 저장하는 저장소 용도로 MediaStore 를 사용함
-contentResolver.query() 로 커서(cursor)를 만들어서 데이터를 가져옴

커서(cursor) : 컨텐트 리졸버가 요청한 쿼리를 통해 반환된 데이터셋을 반복문으로 하나씩 처리 할 수 있음
-val cursor = contentResolver.query(url 주소, 테이블에서 필요한 컬럼, null, null, null)

MediaStore
-각각의 미디어가 종류별로 DB의 테이블처럼 있고, 각 테이블당 주소가 하나씩 제공됨. 테이블 주소와 칼럼명은 상수로 제공
*이미지: MediaStore.Images.Media.EXTERNAL_CONTENT_URI
*오디오: MediaStore.Audio.Media.EXTERNAL_CONTENT_URI
*비디오: MediaStore.Video.Media.EXTERNAL_CONTENT_URI
-미디어의 종류마다 1개의 주소를 가진 콘텐트 프로바이더가 구현되어 있음
-외부 저장소에 있기 때문에 외부 저장소를 읽는 권한이 필요

startProcess() : 리사이클러뷰 세팅
getMusicList() : 컨텐트 리졸버가 외부 저장소(MediaStore)에 요청한 데이터를 커서(cursor)로 받아옴
-val listUrl : 음원 데이터 uri 를 담아 둔 변수
-val dataCol : 음원 데이터 컬럼(불러올 데이터 목록)
-val musicList : 커서로 전달받은 데이터를 저장할 변수

MediaPlayer : 음원을 재생하는 클래스
mediaPlayer != null
-item 목록을 클릭할 때마다 음악 중복 실행 방지
-mediaPlayer != null : 이미 mediaPlayer 에 데이터가 있다 == 음악이 재생 중이다
-mediaPlayer = null 으로 재생 중인 음원을 비워주고 클릭 된 Uri 에 해당하는 음원으로 채움
